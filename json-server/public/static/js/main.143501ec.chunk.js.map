{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/ContactComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","props","toggleNav","bind","toggleModal","handleLogin","state","isNavOpen","isModalOpen","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","color","Component","Loading","baseUrl","RenderMenuItem","dish","image","Menu","menu","dishes","map","key","isLoading","errMess","active","required","val","length","maxLength","len","CommentForm","handleSubmit","values","postComment","dishId","rating","comment","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","RenderDish","in","transformProps","exitTransform","top","description","RenderComments","comments","cmnts","author","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","Footer","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","tag","left","middle","object","body","heading","About","RenderContent","leaders","title","list","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","md","size","offset","checkbox","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.143501ec.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label  } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/home\">\r\n                                <span className=\"fa fa-home fa-lg\" ></span> Home\r\n                            </NavLink>\r\n                        </NavItem>    \r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                <span className=\"fa fa-info fa-lg\" ></span> About Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>    \r\n                            <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                <span className=\"fa fa-list fa-lg\" ></span> Menu\r\n                            </NavLink>\r\n                        </NavItem> \r\n                        <NavItem>   \r\n                            <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                <span className=\"fa fa-address-card fa-lg\" ></span> Contact Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span>Login \r\n                            </Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </Collapse>\r\n                    \r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Restorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\"  id=\"username\" name=\"username\" innerRef={(input) => this.username= input} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\"  id=\"password\" name=\"password\" innerRef={(input) => this.password= input}/>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember= input}/>\r\n                                Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","\r\nimport React from 'react';\r\n\r\n/*\r\nimport { Media } from 'reactstrap';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dishes : [\r\n                {\r\n                    id: 0,\r\n                    name:'Uthappizza',\r\n                    image: 'assets/images/uthappizza.png',\r\n                    category: 'mains',\r\n                    label:'Hot',\r\n                    price:'4.99',\r\n                    description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.'                        },\r\n                 {\r\n                    id: 1,\r\n                    name:'Zucchipakoda',\r\n                    image: 'assets/images/zucchipakoda.png',\r\n                    category: 'appetizer',\r\n                    label:'',\r\n                    price:'1.99',\r\n                    description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce'                        },\r\n                 {\r\n                    id: 2,\r\n                    name:'Vadonut',\r\n                    image: 'assets/images/vadonut.png',\r\n                    category: 'appetizer',\r\n                    label:'New',\r\n                    price:'1.99',\r\n                    description:'A quintessential ConFusion experience, is it a vada or is it a donut?'                        },\r\n                 {\r\n                    id: 3,\r\n                    name:'ElaiCheese Cake',\r\n                    image: 'assets/images/elaicheesecake.png',\r\n                    category: 'dessert',\r\n                    label:'',\r\n                    price:'2.99',\r\n                    description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms'\r\n                 }     \r\n            ],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        \r\n        const menu = this.state.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 mt-5\">\r\n                    <Media tag=\"li\">\r\n                        <Media left middle>\r\n                            <Media object src={dish.image } alt={dish.name} />\r\n                        </Media>\r\n                        <Media body className=\"ml-5\">\r\n                            <Media heading>{dish.name}</Media>\r\n                            <p>{dish.description}</p>\r\n                        </Media>\r\n                    </Media>\r\n                </div>\r\n            )\r\n        });\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Media list>\r\n                        {menu}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb,BreadcrumbItem } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\n/*\r\nclass Menu extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            selectedDish: null\r\n        }\r\n        \r\n    }\r\n    \r\n    onDishSelect(dish) {\r\n        this.setState({ selectedDish: dish});\r\n    }\r\n    \r\n    renderDish(dish) {\r\n        if (dish != null)\r\n            return(\r\n                <Card>\r\n                    <CardImg top width=\"100%\" src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n    */\r\n\r\nimport { Link } from 'react-router-dom'; \r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({ dish, onClick }){\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`}>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n                \r\n            </Card>\r\n        );\r\n    }\r\n    \r\n    const Menu = (props) => {\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n              <div  className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                  <RenderMenuItem dish={dish}  />\r\n              </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n        \r\n\r\n\r\n\r\nexport default Menu;","import React,{ Component} from 'react';\r\n\r\nimport { Card, CardImg, CardText, CardBody, CardTitle,BreadcrumbItem, Breadcrumb, Button, ModalBody, ModalHeader, Modal, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n/*\r\nclass DishDetail extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Dish Detail Component componentDidMount is invoked');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('Dish Detail Component componentDidUpdate is invoked');\r\n    }\r\n    \r\n    \r\n    \r\n    renderDish() {\r\n        if (this.props.dish != null) {\r\n            const comments = this.props.dish.comments.map((comment) => {\r\n                return (\r\n                    <ul className=\"list-unstyled\" key={comment.id}>\r\n                        <li>{comment.comment}</li>\r\n                        <li>-- { comment.author}, {new Date(comment.date).toDateString()}</li>    \r\n                    </ ul>\r\n                );\r\n            });\r\n            return(\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <Card key={this.props.dish.id}>\r\n                            <CardImg top width=\"100%\" src={this.props.dish.image} alt={this.props.dish.name} />\r\n                            <CardBody>\r\n                                <CardTitle>{this.props.dish.name}</CardTitle>\r\n                                <CardText>{this.props.dish.description}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <h4>Comments</h4>\r\n                        {comments}\r\n                    </div>\r\n                </div>\r\n                \r\n            );\r\n        }    \r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log('Dish Detail Component render is invoked');\r\n        return (\r\n            <div className=\"container\">\r\n                {this.renderDish()}\r\n            </div>\r\n        \r\n        );\r\n    }\r\n\r\n}\r\n*/\r\n/*\r\nclass DishDetail extends Component {\r\n\r\n    RenderComments(comments) {\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const cmnts = comments.map(comment => {\r\n            return (\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                            year: 'numeric',\r\n                            month: 'long',\r\n                            day: '2-digit'\r\n                        }).format(new Date(comment.date))}\r\n                    </p>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {cmnts}\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderDish(dish) {\r\n        if (dish != null) {\r\n            return (\r\n                <div className='col-12 col-md-5 m-1'>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (<div></div>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const dish = this.props.dish\r\n        if (dish == null) {\r\n            return (<div></div>)\r\n        }\r\n        const dishItem = this.renderDish(dish)\r\n        const commentItem = this.renderComments(dish.comments)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className='row'>\r\n                    {dishItem}\r\n                    {commentItem}\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n*/\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        //alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.name, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span>Submit Comment \r\n                </Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"name\">Your Name</Label>\r\n                                <Control.text model=\".name\" id=\"name\" name=\"name\" className=\"form-control\"\r\n                                    placeholder=\"Your Name\"\r\n                                    validators = {{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                     }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".name\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                     />    \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"comment\">Comment</Label>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" \r\n                                  name=\"comment\" rows=\"6\" className=\"form-control\"></Control.textarea>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </div>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish != null) {\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (<div></div>)\r\n    }\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    if (comments == null) {\r\n        return (<div></div>)\r\n    }\r\n    const cmnts = comments.map(comment => {\r\n        return (\r\n            <Fade in>\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: '2-digit'\r\n                    }).format(new Date(comment.date))}\r\n                    </p>\r\n                </li>\r\n            </Fade>\r\n            \r\n        )\r\n    })\r\n    return (\r\n        <div className='col-12 col-md-5 m-1'>\r\n            <h4> Comments </h4>\r\n            <ul className='list-unstyled'>\r\n                <Stagger in>\r\n                    {cmnts}\r\n                </Stagger>\r\n                \r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DishDetail = (props) =>{\r\n    const dish = props.dish\r\n        if (props.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <RenderDish dish={dish} />\r\n                    <RenderComments comments={props.comments} \r\n                        postComment={props.postComment}\r\n                        dishId={dish.id} />\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n}\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle} from 'reactstrap';\r\n\r\nimport { Loading} from './LoadingComponent' ;\r\nimport { baseUrl } from '../shared/baseUrl'; \r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n  if (isLoading) {\r\n    return(\r\n      <Loading />\r\n    );\r\n  }\r\n  else if (errMess) {\r\n    return(\r\n      <h4>{errMess}</h4>\r\n    );\r\n}\r\n  return(\r\n    <FadeTransform\r\n    in\r\n    transformProps={{\r\n        exitTransform: 'scale(0.5) translateY(-50%)'\r\n    }}>\r\n      <Card>\r\n        <CardImg src={baseUrl + item.image} alt={item.name} />\r\n        <CardBody>\r\n        <CardTitle>{item.name}</CardTitle>\r\n        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n        <CardText>{item.description}</CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </FadeTransform>\r\n  );\r\n\r\n}\r\n\r\n\r\nfunction Home(props) {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row align-items-start\">\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}/>\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n         </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home;   ","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({ leader }) {\r\n    return (\r\n        <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + leader.image } alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <Media >{leader.designation}</Media>\r\n                    <p><br />{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction About(props) {\r\n\r\n    function RenderContent({ leaders, isLoading, errMess }) {\r\n        if (isLoading) {\r\n          return <Loading />;\r\n        } else if (errMess) {\r\n          return <h4>{errMess}</h4>;\r\n        } else\r\n          return (\r\n            <Stagger in>\r\n              {props.leaders.leaders.map(leader => (\r\n                <Fade in key={leader.id}>\r\n                  <RenderLeader key={leader.id} leader={leader} />\r\n                </Fade>\r\n              ))}\r\n            </Stagger>\r\n          );\r\n      }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                <Media list>\r\n                    <RenderContent\r\n                        leaders={props.leader}\r\n                        isLoading={props.leaderLoading}\r\n                        errMess={props.leaderErrMess}\r\n                    />\r\n          </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Component } from 'react';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        /*\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        };\r\n        */\r\n    //    this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    //    this.handleBlur = this.handleBlur.bind(this);\r\n        \r\n    }\r\n    /*\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n    */\r\n    handleSubmit(values) {\r\n      //  console.log('Current State is: ' + JSON.stringify(values));\r\n      //  alert('Current State is: ' + JSON.stringify(values));\r\n        \r\n      this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message)\r\n      this.props.resetFeedbackForm();\r\n       // event.preventDefault();\r\n    }\r\n    /*\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]:true}\r\n        })\r\n    }\r\n    */\r\n   /*\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if(this.state.touched.firstname && firstname.length < 3) \r\n            errors.firstname= 'First Name should be >= 3 characters';\r\n        else if(this.state.touched.firstname && firstname.length > 10)\r\n            errors.lastname= 'First Name should be <= 10 characters' ;  \r\n        \r\n            if(this.state.touched.lastname && lastname.length < 3) \r\n            errors.lastname= 'Last Name should be >= 3 characters';\r\n        else if(this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname= 'Last Name should be <= 10 characters' ;  \r\n            \r\n        const reg = /^\\d+$/;\r\n        \r\n        if(this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x=> x=== '@').length !==1)\r\n            errors.email = 'Email should contain a @ sign';\r\n\r\n        return errors;\r\n    }\r\n    */\r\n    render() {\r\n    //    const errors= this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/#\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}  />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                          \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                         \r\n                                </Col>                        \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                        />\r\n                                     <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     /> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />                                       \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                            className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                        ></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        \r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments',{\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error= new Error('Error '+ response.status + ': ' + response.statusText);\r\n            error.response =response;\r\n            throw error; \r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); \r\n        alert('Your comment could not be posted\\nError: '+error.message); });\r\n}\r\n\r\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => dispatch => {\r\n    const newFeedback = {\r\n        firstname:firstname,\r\n        lastname:lastname,\r\n        telnum:telnum,\r\n        email:email,\r\n        agree:agree,\r\n        contactType:contactType,\r\n        message:message\r\n    }\r\n\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback',{\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error= new Error('Error '+ response.status + ': ' + response.statusText);\r\n            error.response =response;\r\n            throw error; \r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response =>\r\n        alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n      )\r\n    .catch(error =>  { console.log('Post Feedback', error.message); \r\n        alert('Your feedback could not be posted\\nError: '+error.message); });\r\n}\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n    /*\r\n    setTimeout(() => {\r\n        dispatch(addDishes(DISHES));\r\n    }, 2000);\r\n    */\r\n   return fetch(baseUrl + 'dishes')\r\n   .then(response => {\r\n       if(response.ok){\r\n           return response;\r\n       }\r\n       else {\r\n           var error= new Error('Error '+ response.status + ': ' + response.statusText);\r\n           error.response =response;\r\n           throw error; \r\n       }\r\n   },\r\n   error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(response => response.json())\r\n   .then(dishes => dispatch(addDishes(dishes)))\r\n   .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response =>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response=response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess= new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.message = response;\r\n            throw error; \r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading())\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.message = response;\r\n            throw error; \r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n","export const ADD_COMMENT= 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders,postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n/*\r\nimport { DISHES} from '../shared/dishes';\r\nimport { COMMENTS} from '../shared/comments';\r\nimport { LEADERS} from '../shared/leaders';\r\nimport { PROMOTIONS } from '../shared/promotions';\r\n*/\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      dishes:state.dishes,\r\n      comments:state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment : (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes : () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback : (firstname,lastname,telnum,email,agree,contactType,message) => dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message))\r\n});\r\n\r\nclass Main extends Component {\r\n  /*\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      dishes: DISHES,\r\n      comments: COMMENTS,\r\n      promotions:PROMOTIONS,\r\n      leaders: LEADERS\r\n    };\r\n    \r\n  }*/\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  \r\n\r\n  render(){\r\n\r\n    const HomePage= () => {\r\n      return (\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]} \r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishesErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leaderLoading={this.props.leaders.isLoading}\r\n        leaderErrMess={this.props.leaders.errMess}   />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n        return (\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n          />\r\n        )\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        \r\n        \r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errmess: null,\r\n    leaders:[]\r\n},action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.LEADERS_LOADING :\r\n            return {...state , isLoading:true , errmess: null , leaders:[]};\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading:false , errmess:null , leaders:action.payload};\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading:false , errmess: action.payload , leaders: []};        \r\n        default : \r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent'\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\n// import { DISHES} from './shared/dishes';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\nclass App extends Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n      dishes: DISHES\n    };\n  }\n  */\n  \n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n        \n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n      \n      \n    );\n  }\n  \n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes} from './dishes';\r\nimport { Comments} from './comments';\r\nimport { Promotions} from './promotions';\r\nimport { Leaders} from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\n\r\nexport const ConfigureStore = ()  => {\r\n    const store = createStore(\r\n        combineReducers ({\r\n            dishes : Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback \r\n            })\r\n        }),\r\n\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}